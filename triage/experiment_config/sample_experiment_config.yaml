config_version: 'v3'

model_comment: 'sample eis config file'

user_metadata:
  label_definition: 'some_label_definition'
  experiment_type: 'test'
  org: 'Benchmark'
  team: 'Research'
  author: 'Some Guy'

temporal_config:
    feature_start_time: '2010-01-01'
    feature_end_time: '2017-01-01'
    label_start_time: '2010-01-01'
    label_end_time: '2017-07-02'

    model_update_frequency: '1month' 
    training_label_timespans: ['1y']
    training_as_of_date_frequencies: '15d'

    test_durations: '0d'
    test_label_timespans: ['1y'] # 3month, 6month, 1y
    test_as_of_date_frequencies: '1d'

    max_training_histories: '1y'  # 1y, 2y, 10y

events_table: 'triage.outcomes_active_officers'

state_config:
    table_name: 'triage.states'
    state_filters:
      - 'active'

feature_aggregations:
    -
        prefix: 'incidents'
        from_obj: 'staging.incidents'
        knowledge_date_column: 'report_date'

        aggregates:
          - # number of events
            quantity:
              total: "*"

            imputation:
              count:
                type: 'mean'

            metrics: ['count']

        categoricals:
          - # number of events by type
            column: 'intervention_type_code'
            choice_query: 'select distinct intervention_type_code from staging.incidents'

            imputation:
              sum:
                type: 'mean'
              avg:
                type: 'mean'

            metrics:
              - 'sum'
              - 'avg'

        intervals: ['1y']

        groups:
            - 'entity_id'

feature_group_definition:
  prefix:
    - 'incidents'

feature_group_strategies: ['all']

user_metadata:
  label_definition: 'only_eis_alerts'

model_group_keys:
    - 'label_definition'
    - 'label_timespan'
    - 'state'
    - 'as_of_date_frequency'

grid_config:
    'sklearn.tree.DecisionTreeClassifier':
        criterion: ['gini']
        min_samples_split: [2]
        class_weight: [null,'balanced']
        max_depth: [1,2,null]

scoring:
    metric_groups:
        -
            metrics: ['precision@', 'recall@']
            thresholds:
                percentiles: [1.0, 2.0, 5.0, 10.0, 25.0, 50.0, 75.0, 95.0, 100.0]
                top_n: [5, 10, 25, 50, 75, 100, 150, 200, 300, 500, 1000, 2000]

individual_importance:
     methods: ['uniform']
     n_ranks: 10
